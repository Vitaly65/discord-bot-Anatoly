import discord;
from discord import flags;
from discord.ext import commands;
from discord import utils;
import config;
import requests;
from bs4 import BeautifulSoup;
import pymysql;
import datetime;
import wikipedia;

bot = commands.Bot(command_prefix='~', intents = discord.Intents.all(), help_command=None);

@bot.event
async def on_ready():
    try:
        global creator;
        global date;
        global yesterday;
        creator = await bot.fetch_user(318720256795344896);
        date = datetime.datetime.today();
        yesterday = datetime.datetime.today() - datetime.timedelta(days = 1);
        print(f'We have logged as {bot.user}');
        config.botstatus = '‚úÖ';
        wikipedia.set_lang("ru");
        try:
            connection = await connectsql();
            config.sqlstatus = '‚úÖ';
        except:
            print('SQL error');
    except:
        print('Fatal error');

@bot.event
async def on_member_join(member):
    try:
        connection = await connectsql();
        user = str(member.name) + '#' + str(member.discriminator);
        role = utils.get(member.guild.roles, id=config.ROLE);
        emb = discord.Embed(title=f"–£ –Ω–∞—Å –Ω–æ–≤—ã–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π! {user}", value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);
        await member.add_roles(role);
        print('–ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å', user);
        emb = discord.Embed(title='–î–æ—Å—å–µ:', value='\u200b', color=0x008000);
        emb.add_field(name=f"–ò–º—è:", value=member.name, inline=True);
        emb.add_field(name=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä:", value=member.discriminator, inline=True);
        emb.set_thumbnail(url=member.avatar_url);
        emb.add_field(name=f"ID:", value=member.id, inline=False);
        emb.add_field(name=f"–°—Ç–∞—Ç—É—Å:", value=member.status, inline=True);
        if member.activities == ():
            emb.add_field(name=f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value='–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', inline=True);
        else:
            emb.add_field(name=f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=member.activities, inline=True);
        roles = member.roles;
        rowRoles = '';
        for i in roles:
            rowRoles = rowRoles + str(i) + ' ';
        emb.add_field(name=f"–†–æ–ª–∏:", value=rowRoles, inline=False);
        emb.add_field(name=f"–î–∞—Ç–∞:", value=member.joined_at.strftime("%d-%m-%Y %H:%M:%S"), inline=False);
        emb.set_author(name=f"–î–æ—Å—å–µ —Å–æ—Å—Ç–∞–≤–∏–ª: {bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);
        with connection:
            cur = connection.cursor()
            insert_query = "SELECT * FROM blacklist";
            cur.execute(insert_query);
            rows = cur.fetchall()
            if rows != ():
                for i in rows:
                    if i['login'] == user:
                        emb = discord.Embed(title=f'{user} –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ black hole —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ë—É–¥–µ—Ç —É–Ω–∏—á—Ç–æ–∂–µ–Ω!', value='\u200b', color=0xff0000);
                        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                        await bot.get_channel(config.CHANNEL).send(embed = emb);
                        await member.kick(reason=f'black hole');
                        break;
    except:
        emb = discord.Embed(title=f'Fatal error', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);

@bot.event
async def on_member_remove(member):
    try:
        user = str(member.name) + '#' + str(member.discriminator);
        emb = discord.Embed(title=f"{user} –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å", value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);
    except:
        emb = discord.Embed(title=f'Fatal error', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);

@bot.event
async def on_command_error(ctx, error):
    print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {error}');
    er = str(error);
    if er == 'arg is a required argument that is missing.':
        emb = discord.Embed(title=f'–ú–Ω–µ –Ω—É–∂–µ–Ω –µ–≥–æ –ª–æ–≥–∏–Ω, —Ç—ã—Å—è—á–∞ —á–µ—Ä—Ç–µ–π!', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);
        return;
    emb = discord.Embed(title=f'{error}', value='\u200b', color=0xff0000);
    await bot.get_channel(config.CHANNEL).send(embed = emb);

@bot.event
async def on_raw_reaction_add(payload):
    if payload.message.id == 870438016341147718 and payload.emoji.name == "üòÄ":
        role = discord.utils.get(payload.guild.roles, name="–ì–ª–∞–≤–Ω—ã–π –≤—Ä–∞—á")
        await payload.author.add_roles(role)

@bot.command(pass_context= True)
async def blackhole(ctx):
    try:
        connection = await connectsql();
        with connection:
            cur = connection.cursor();
            insert_query = "SELECT * FROM blacklist";
            cur.execute(insert_query);
            rows = cur.fetchall();
            if rows != ():
                emb = discord.Embed(title=f"–ù–∞—à –æ–±—â–∏–π black hole:", value='\u200b', color=0xff0000);
                emb.add_field(name=f'–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(rows)}', value='\u200b', inline=False);
                count = 1;
                for i in rows:
                    a = i['login'];
                    emb.add_field(name=f'{count}. {a}', value='\u200b', inline=False);
                    count += 1;
                emb.set_author(name=f"Black hole –æ—Ö—Ä–∞–Ω—è–µ—Ç: {bot.user}", icon_url=bot.user.avatar_url);
                emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                await ctx.channel.send(embed = emb);
            else:
                emb = discord.Embed(title=f"–ú–∏–ª–æ—Ä–¥, –Ω–∞—à black hole –ø—É—Å—Ç", value='\u200b', color=0xff0000);
                emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title=f'Fatal error', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def status(ctx):
    try:
        emb = discord.Embed(title='Status', value='\u200b', color=0x00FBF0);
        emb.add_field(name=f"Bot: {config.botstatus}", value='\u200b', inline=False);
        emb.add_field(name=f"SQL server: {config.sqlstatus}", value='\u200b', inline=False);
        emb.add_field(name=f"Ping: {bot.latency} ms", value='\u200b', inline=False);
        emb.set_author(name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª: {bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title=f'Fatal error, status is not working, –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def addtoblackhole(ctx, *, arg):
    try:
        connection = await connectsql();
        with connection.cursor() as cursor:
            cur = connection.cursor();
            insert_query = "SELECT * FROM blacklist";
            cur.execute(insert_query);
            rows = cur.fetchall();
            if rows != ():
                for i in rows:
                    a = i['login'];
                    if a == arg:
                        emb = discord.Embed(title=f'–ê–≥–∞, –¥–µ—Ä–∂–∏ –∫–∞—Ä–º–∞–Ω —à–∏—Ä–µ, –æ–Ω —Ç–∞–º —É–∂–µ –µ—Å—Ç—å', value='\u200b', color=0xff0000);
                        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                        await ctx.channel.send(embed = emb);
                        return;
            insert_query = f"INSERT INTO blacklist (login) VALUES ('{arg}');";
            cursor.execute(insert_query);
            connection.commit();
            emb = discord.Embed(title=f'{arg} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ black hole', value='\u200b', color=0x00FF00);
            emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
            emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
            await ctx.channel.send(embed = emb);
    except:
        print('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã addtoblackhole');
        emb = discord.Embed(title=f'Fatal error', value='\u200b', color=0xff0000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def deletefromblackhole(ctx, *, arg):
    connection = await connectsql();
    try:
         with connection.cursor() as cursor:
            insert_query = f"SELECT * FROM blacklist";
            cursor.execute(insert_query);
            rows = cursor.fetchall();
            if rows != ():
                if arg == 'all':
                    for i in rows:
                        user = i['login'];
                        insert_query = f"DELETE FROM blacklist WHERE login = ('{user}');";
                        cursor.execute(insert_query);
                        connection.commit();
                    emb = discord.Embed(title=f'Black hole –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω', value='\u200b', color=0x00FF00);
                    emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                    emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                    await ctx.channel.send(embed = emb);
                else:
                    arg = str(arg);
                    for i in rows:
                        user = i['login'];
                        if user == arg:
                            insert_query = f"DELETE FROM blacklist WHERE login = ('{arg}');";
                            cursor.execute(insert_query);
                            connection.commit();
                            emb = discord.Embed(title=f'{arg} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ black hole', value='\u200b', color=0x00FF00);
                            emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                            emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                            await ctx.channel.send(embed = emb);
                        else:
                            emb = discord.Embed(title=f'–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ black hole', value='\u200b', color=0xff0000);
                            emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                            emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                            await ctx.channel.send(embed = emb);
            else:
                emb = discord.Embed(title=f"–ú–∏–ª–æ—Ä–¥, –Ω–∞—à black hole –ø—É—Å—Ç", value='\u200b', color=0xff0000);
                emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
                emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
                await ctx.channel.send(embed = emb);
    except:
        print('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã deletefromblackhole');
        emb = discord.Embed(title=f'Fatal error', value='\u200b', color=0xff0000);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def help(ctx):
    try:
        emb = discord.Embed(title='–ö–æ–º–∞–Ω–¥—ã:', value='\u200b', color=0xffff00);
        emb.add_field(name=f"~status", value='–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ SQL —Å–µ—Ä–≤–µ—Ä–∞', inline=False);
        emb.add_field(name=f"~blackhole", value='–ó–∞–≥–ª—è–Ω—É—Ç—å –≤ black hole', inline=False);
        emb.add_field(name=f"~addtoblackhole (user login)", value='–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ black hole', inline=False);
        emb.add_field(name=f"~deletefromblackhole (user login or 'all')", value='–£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑/–ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å black hole', inline=False);
        emb.add_field(name=f"~info (@login)", value='–°–æ–±—Ä–∞—Ç—å —Å–∞–º–æ–µ –ø–æ–ª–Ω–æ–µ –¥–æ—Å—å–µ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞', inline=False);
        emb.add_field(name=f"~search (–∞—Ä–≥—É–º–µ–Ω—Ç)", value='–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –í–∞—Å—Å–µ—Ä–º–∞–Ω—É', inline=False);
        emb.add_field(name=f"~USD", value='–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞', inline=False);
        emb.add_field(name=f"~EUR", value='–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –µ–≤—Ä–æ', inline=False);
        emb.set_author(name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª: {bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title=f'–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã help', value='\u200b', color=0xff0000);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def info(ctx, *, member: discord.Member):
    try:
        emb = discord.Embed(title='–î–æ—Å—å–µ:', value='\u200b', color=0x008000);
        emb.add_field(name=f"–ò–º—è:", value=member.name, inline=True);
        emb.add_field(name=f"–ü—Å–µ–≤–¥–æ–Ω–∏–º:", value=member.display_name, inline=True);
        emb.add_field(name=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä:", value=member.discriminator, inline=True);
        emb.set_thumbnail(url=member.avatar_url);
        emb.add_field(name=f"ID:", value=member.id, inline=False);
        emb.add_field(name=f"–°—Ç–∞—Ç—É—Å:", value=member.status, inline=True);
        emb.add_field(name=f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ:", value=member.activity, inline=True);
        roles = member.roles;
        rowRoles = '';
        for i in roles:
            rowRoles = rowRoles + str(i) + ' ';
        emb.add_field(name=f"–†–æ–ª–∏:", value=rowRoles, inline=False);
        emb.add_field(name=f"–î–∞—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è:", value=member.joined_at.strftime("%d-%m-%Y %H:%M:%S"), inline=True);
        emb.add_field(name=f"–î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—å–µ:", value=date.strftime('%d-%m-%Y'), inline=True);
        emb.set_author(name=f"–î–æ—Å—å–µ —Å–æ—Å—Ç–∞–≤–∏–ª: {bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);
    except:
        emb = discord.Embed(title='–û—à–∏–±–∫–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        await bot.get_channel(config.CHANNEL).send(embed = emb);

@bot.command(pass_context= True)
async def search(ctx, *, arg):
    try:
        answer = str(wikipedia.summary(f"{arg}", sentences=5));
        answer_url = str(wikipedia.page(f"{arg}").url);
        emb = discord.Embed(title='–û—Ç–≤–µ—Ç –í–∞—Å—Å–µ—Ä–º–∞–Ω–∞:', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name='\u200b', value=f"{answer}", inline=False);
        emb.set_thumbnail(url = wikipedia.page(f"{arg}").images[1]);
        emb.add_field(name='\u200b', value=f"{answer_url}", inline=False);
        await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title='–û—Ç–≤–µ—Ç –í–∞—Å—Å–µ—Ä–º–∞–Ω–∞:', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name='\u200b', value=f"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ :(", inline=False);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def USD(ctx):
    try:
        text = await parser_cbr();
        emb = discord.Embed(title='–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞(by cbr.ru):', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name=yesterday.strftime('%d-%m-%Y'), value=f"{text[1]}", inline=False);
        emb.add_field(name=date.strftime('%d-%m-%Y'), value=f"{text[2]}", inline=False);
        await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title='Error', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name=f"cbr.ru –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç", value='\u200b', inline=False);
        await ctx.channel.send(embed = emb);

@bot.command(pass_context= True)
async def EUR(ctx):
    try:
        text = await parser_cbr();
        emb = discord.Embed(title='–ö—É—Ä—Å –µ–≤—Ä–æ(by cbr.ru):', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name=yesterday.strftime('%d-%m-%Y'), value=f"{text[4]}", inline=False);
        emb.add_field(name=date.strftime('%d-%m-%Y'), value=f"{text[5]}", inline=False);
        await ctx.channel.send(embed = emb);
    except:
        emb = discord.Embed(title='Error', value='\u200b', color=0x008000);
        emb.set_author(name=f"{bot.user}", icon_url=bot.user.avatar_url);
        emb.set_footer(text=f"Bot powered by: Vitaly#1605", icon_url=creator.avatar_url);
        emb.add_field(name=f"cbr.ru –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç", value='\u200b', inline=False);
        await ctx.channel.send(embed = emb);

async def parser_cbr():
    url = 'https://cbr.ru/';
    response = requests.get(url);
    soup = BeautifulSoup(response.text, 'lxml');
    quotes = soup.find_all('div', class_='col-xs-9');
    text = [];
    for quote in quotes:
        text.append(quote.text);
    print(text);
    return text;

async def connectsql():
    connection = pymysql.connect(
                host=config.host,
                port=config.port,
                user=config.user,
                password=config.password,
                database=config.db_name,
                charset=config.charset,
                cursorclass=pymysql.cursors.DictCursor
            );
    return connection;

bot.run(config.TOKEN);